[
  {
    "key": "ctrl+g",
    "command": "fuzzySearch.activeTextEditor"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+[",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.newWindow",
    "when": "!explorerViewletFocus"
  },
  {
    "key": "ctrl+insert",
    "command": "workbench.view.explorer",
    "when": "terminalFocus || viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.view.explorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && inputFocus"
  },
  {
    "key": "ctrl+shift+alt+n",
    "command": "-extension.createFolder"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.files.action.createFolderFromExplorer"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-extension.createFile"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.files.action.createFileFromExplorer"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-extension.launch"
  },
  {
    "key": "shift+end",
    "command": "cursorLineEndSelect"
  },
  {
    "key": "alt+home",
    "command": "cursorLineStart"
  },
  {
    "key": "alt+end",
    "command": "cursorLineEnd"
  },
  {
    "key": "alt+l",
    "command": "cursorLineEnd"
  },
  {
    "key": "alt+k",
    "command": "cursorLineStart"
  },
  {
    "key": "alt+right",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+left",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f2",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "insert",
    "command": "list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "key": "left",
    "command": "-list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "key": "insert",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.terminal.killAll",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.terminal.killAll",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "      terminalFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+up",
    "command": "-scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "gotoNextPreviousMember.nextMember"
  },
  {
    "key": "ctrl+up",
    "command": "gotoNextPreviousMember.previousMember"
  },
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+insert",
    "command": "workbench.action.focusActivityBar"
  },
  {
    "key": "ctrl+insert",
    "when": "workbench.action.focusActivityBar",
    "command": "-workbench.action.focusActivityBar"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+enter",
    "command": "-explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.duplicateWorkspaceInNewWindow",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    // Unbind unconditional default
    "key": "ctrl+7",
    "command": "-workbench.action.focusSideBar"
  },
  {
    // to ←
    "key": "ctrl+alt+e",
    "when": "!sideBarFocus",
    "command": "workbench.action.focusSideBar"
  },
  {
    // from →
    "key": "ctrl+alt+e",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+alt+up",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+f4",
    "command": "-search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "f2",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+k f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated"
  },
  {
    "key": "ctrl+k ctrl+alt+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+alt+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+alt+y",
    "command": "workbench.action.closeGroup"
  },
  {
    "key": "ctrl+shift+d",
    "command": "git.clean",
    "when": "workbench.scm.active"
  },
  {
    "key": "alt+s",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home",
    "command": "-cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+s",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+c",
    "command": "references-view.copyPath"
  },
  {
    "key": "alt+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+g",
    "command": "workbench.view.extension.vscode-chatgpt-view-container"
  },
  {
    "key": "ctrl+y",
    "command": "interactiveEditor.start",
    "when": "interactiveEditorHasProvider && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "-interactiveEditor.start",
    "when": "interactiveEditorHasProvider && !editorReadonly"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.clear",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+u ctrl+0",
    "command": "l13Projects.action.hotkey.previousWorkspace"
  },
  {
    "key": "ctrl+l ctrl+0",
    "command": "-l13Projects.action.hotkey.previousWorkspace"
  },
  {
    "key": "ctrl+u ctrl+t",
    "command": "l13Projects.action.tag.pickTag"
  },
  {
    "key": "ctrl+l ctrl+t",
    "command": "-l13Projects.action.tag.pickTag"
  },
  {
    "key": "ctrl+u ctrl+1",
    "command": "l13Projects.action.hotkey.slot1"
  },
  {
    "key": "ctrl+l ctrl+1",
    "command": "-l13Projects.action.hotkey.slot1"
  },
  {
    "key": "ctrl+u ctrl+2",
    "command": "l13Projects.action.hotkey.slot2"
  },
  {
    "key": "ctrl+l ctrl+2",
    "command": "-l13Projects.action.hotkey.slot2"
  },
  {
    "key": "ctrl+u ctrl+3",
    "command": "l13Projects.action.hotkey.slot3"
  },
  {
    "key": "ctrl+l ctrl+3",
    "command": "-l13Projects.action.hotkey.slot3"
  },
  {
    "key": "ctrl+u ctrl+4",
    "command": "l13Projects.action.hotkey.slot4"
  },
  {
    "key": "ctrl+l ctrl+4",
    "command": "-l13Projects.action.hotkey.slot4"
  },
  {
    "key": "ctrl+u ctrl+5",
    "command": "l13Projects.action.hotkey.slot5"
  },
  {
    "key": "ctrl+l ctrl+5",
    "command": "-l13Projects.action.hotkey.slot5"
  },
  {
    "key": "ctrl+u ctrl+6",
    "command": "l13Projects.action.hotkey.slot6"
  },
  {
    "key": "ctrl+l ctrl+6",
    "command": "-l13Projects.action.hotkey.slot6"
  },
  {
    "key": "ctrl+u ctrl+7",
    "command": "l13Projects.action.hotkey.slot7"
  },
  {
    "key": "ctrl+l ctrl+7",
    "command": "-l13Projects.action.hotkey.slot7"
  },
  {
    "key": "ctrl+u ctrl+8",
    "command": "l13Projects.action.hotkey.slot8"
  },
  {
    "key": "ctrl+l ctrl+8",
    "command": "-l13Projects.action.hotkey.slot8"
  },
  {
    "key": "ctrl+u ctrl+9",
    "command": "l13Projects.action.hotkey.slot9"
  },
  {
    "key": "ctrl+l ctrl+9",
    "command": "-l13Projects.action.hotkey.slot9"
  },
  {
    "key": "ctrl+u ctrl+p",
    "command": "workbench.view.extension.l13Projects"
  },
  {
    "key": "ctrl+l ctrl+p",
    "command": "-workbench.view.extension.l13Projects"
  },
  {
    "key": "ctrl+alt+p",
    "command": "l13Projects.action.workspaces.pickWorkspace"
  },
  {
    "key": "ctrl+shift+alt+p",
    "command": "-l13Projects.action.workspaces.pickWorkspace"
  },
  {
    "key": "ctrl+shift+alt+p",
    "command": "l13Projects.action.favorites.pickFavorite"
  },
  {
    "key": "ctrl+alt+p",
    "command": "-l13Projects.action.favorites.pickFavorite"
  },
  {
    "key": "alt+i",
    "command": "workbench.action.toggleMenuBar"
  },
  {
    "key": "alt+u",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+y",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "alt+d",
    "command": "editor.action.revealDefinition"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+m",
    "command": "timeline.focus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+shift+down",
    "command": "merge-conflict.next",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+up",
    "command": "merge-conflict.previous",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+p",
    "command": "dendron.lookupNote",
    "when": "dendron:pluginActive"
  },
  {
    "key": "ctrl+l",
    "command": "-dendron.lookupNote",
    "when": "dendron:pluginActive"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.extension.dendron-view",
    "when": "dendron:pluginActive"
  },
  {
    "key": "alt+\\",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+space",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "alt+\\",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "f7",
    "command": "-editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "alt+h",
    "command": "editor.action.showDefinitionPreviewHover"
  },
  {
    "key": "insert",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "alt+g",
    "command": "editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+-",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+[Semicolon]",
    "command": "editor.fold"
  },
  {
    "key": "alt+]",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+[Quote]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-phind.searchTerminalOutput"
  },
  {
    "key": "ctrl+shift+s",
    "command": "extension.elixirJumpToTest",
    "when": "editorTextFocus && editorLangId == 'elixir'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-extension.elixirJumpToTest",
    "when": "editorTextFocus && editorLangId == 'elixir'"
  },
  {
    "key": "ctrl+shift+t",
    "command": "maximizeterminal.openMaximizedTerminal",
    "when": "config.maximizeterminal.useAlternativeKeybinding && !activeAuxiliary && !activePanel"
  },
  {
    "key": "ctrl+;",
    "command": "-maximizeterminal.openMaximizedTerminal",
    "when": "config.maximizeterminal.useAlternativeKeybinding && !activeAuxiliary && !activePanel"
  },
  {
    "key": "ctrl+shift+t",
    "command": "maximizeterminal.openMaximizedTerminal",
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "-maximizeterminal.openMaximizedTerminal",
    "when": "!activeAuxiliary && !activePanel && !config.maximizeterminal.useAlternativeKeybinding"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+alt+p",
    "command": "workbench.action.tasks.runTask",
    "args": "Run pf command"
  },
  {
    "key": "ctrl+shift+,",
    "command": "gitlens.diffWithPrevious"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+,",
    "command": "editor.action.accessibleDiffViewer.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.accessibleDiffViewer.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+shift+down",
    "command": "gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
  }
]